docker network create local-network

./mvnw clean package -DskipTests

docker build -t swiggy-service-registry .
docker build -t swiggy-gateway .
docker build -t swiggy-app .
docker build -t restaurant-service .
docker build -t identity-service .


docker run -d --name swiggy-service-registry --network local-network -p 8761:8761 swiggy-service-registry
docker run -d --name swiggy-gateway --network local-network -p 8080:8080 swiggy-gateway
docker run -d --name swiggy-app --network local-network -p 8081:8081 swiggy-app
docker run -d --name restaurant-service --network local-network -p 8082:8082 restaurant-service
docker run -d --name identity-service --network local-network -p 9898:9898 identity-service


######

docker build --platform linux/amd64 -t swiggy-service-registry .
docker build --platform linux/amd64 -t swiggy-gateway .
docker build --platform linux/amd64 -t identity-service .
docker build --platform linux/amd64 -t swiggy-app .
docker build --platform linux/amd64 -t restaurant-service .

###

docker run -d --name swiggy-service-registry --network local-network -p 8761:8761 swiggy-service-registry

docker run -d --name swiggy-gateway --network local-network \
-e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE='http://swiggy-service-registry:8761/eureka/' \
-e EUREKA_INSTANCE_HOSTNAME='swiggy-service-registry' \
-e EUREKA_INSTANCE_PREFER-IP-ADDRESS='true' \
-p 8080:8080 swiggy-gateway

docker run -d --name identity-service --network local-network \
-e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE='http://swiggy-service-registry:8761/eureka/' \
-e EUREKA_INSTANCE_HOSTNAME='swiggy-service-registry' \
-e EUREKA_INSTANCE_PREFER-IP-ADDRESS='true' \
-e POSTGRES_USER='postgres' \
-e POSTGRES_PASSWORD='1234' \
-e SPRING_DATASOURCE_URL='jdbc:postgresql://postgres:5432/testdb' \
-e SPRING_DATASOURCE_USERNAME='postgres' \
-e SPRING_DATASOURCE_PASSWORD='1234' \
-e SPRING_JPA_HIBERNATE_DDL_AUTO='update' \
-p 9898:9898 identity-service

#####

docker network create local-network
docker-compose -f docker-compose.yml up

docker-compose up -d --build
docker-compose down






######

docker-compose up -d --build
docker-compose down



##Dockerfile
FROM openjdk:17

EXPOSE 8761

WORKDIR /app

COPY .mvn/ .mvn
COPY mvnw mvnw.cmd pom.xml ./
RUN ./mvnw dependency:go-offline
 
COPY src ./src
 
CMD ["./mvnw", "spring-boot:run"]

####solve error
open mvnw in vscode
change CRLF to LF



